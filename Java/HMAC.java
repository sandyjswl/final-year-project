import java.io.*;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;

public class HMAC {


    public static String createHashCode(String filename, String key) throws IOException {
        Mac sha512_HMAC = null;
        String result = null;
        //String key =  "key";

        try{
            byte [] byteKey = key.getBytes("UTF-8");
            final String HMAC_SHA512 = "HmacSHA512";
            sha512_HMAC = Mac.getInstance(HMAC_SHA512);
            SecretKeySpec keySpec = new SecretKeySpec(byteKey, HMAC_SHA512);
            sha512_HMAC.init(keySpec);
            InputStream fis =  new FileInputStream(filename);
            byte[] buffer = new byte[1024];
            int readSize;

            do {
                readSize = fis.read(buffer);
                if (readSize > 0) {
                    sha512_HMAC.update(buffer, 0, readSize);
                }
            } while (readSize != -1);

            byte[] hashValue = sha512_HMAC.doFinal();

            //result = Base64.encode(mac_data);
            result = bytesToHex(hashValue);

        }
        catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        return result;
    }


    public static String bytesToHex(byte[] bytes) {
        final  char[] hexArray = "0123456789ABCDEF".toCharArray();
        char[] hexChars = new char[bytes.length * 2];
        for ( int j = 0; j < bytes.length; j++ ) {
            int v = bytes[j] & 0xFF;
            hexChars[j * 2] = hexArray[v >>> 4];
            hexChars[j * 2 + 1] = hexArray[v & 0x0F];
        }
        return new String(hexChars);
    }




    public static void main(String args[]) {
        try {
            String key = args[0];
            String currentDirectory = System.getProperty("user.dir");
            String myDirectoryPath = currentDirectory + "/src/data";
            File dir = new File(myDirectoryPath);
            File[] directoryListing = dir.listFiles();
            if (directoryListing != null) {
                for (File child : directoryListing) {
                    System.out.println("File Name: "+child);
                    String stringChild = "" + child;
                    System.out.print("HashCode Generated by HMAC: ");
                    long startTime = System.currentTimeMillis();
                    System.out.println(createHashCode(stringChild,key));
                    long endTime = System.currentTimeMillis();
                    System.out.println("Time Taken: "+(endTime - startTime) + " ms");
                    System.out.println();

                }
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
}
